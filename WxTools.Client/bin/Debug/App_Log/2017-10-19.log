2017-10-19 11:07:59,838 [7] INFO  WxTools.Client.Common - 进入自动更新
 WxTools.Client.Commonname2017-10-19 11:08:02,233 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 11:08:09,625 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 43
2017-10-19 11:08:11,261 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 16:53:30,181 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 16:54:48,888 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 16:55:56,446 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:13:45,435 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:13:47,473 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:14:03,738 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:14:05,394 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:18:21,635 [7] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:19:10,657 [6] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:19:12,574 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:25:56,381 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:25:58,239 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:31:43,627 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:31:45,421 [4] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname2017-10-19 17:40:52,878 [5] ERROR WxTools.Client.Common - HasNewVersion
 WxTools.Client.CommonnameSystem.UriFormatException: 无效的 URI: 未能分析主机名。
   在 System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   在 System.Uri..ctor(String uriString)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink..ctor(String channelURI, TcpClientChannel channel)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)
   在 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String url, Object remoteChannelData, String& objectURI)
   在 System.Runtime.Remoting.RemotingConfigHandler.FindDelayLoadChannelForCreateMessageSink(String url, Object data, String& objectURI)
   在 System.Runtime.Remoting.RemotingServices.CreateChannelSink(String url, Object data, IMessageSink& chnlSink)
   在 System.Runtime.Remoting.RemotingServices.Unmarshal(Type classToProxy, String url, Object data)
   在 System.Activator.GetObject(Type type, String url, Object state)
   在 System.Activator.GetObject(Type type, String url)
   在 OAUS.Core.VersionHelper.GetLatestVersion(String oausServerIP, Int32 oausServerPort)
   在 OAUS.Core.VersionHelper.HasNewVersion(String oausServerIP, Int32 oausServerPort)
   在 WxTools.Client.Common.HasNewVersion() 位置 F:\WxTools\WxTools.Client\Common.cs:行号 29
2017-10-19 17:40:54,674 [6] INFO  WxTools.Client.ViewModel.MainViewModel - 监测线程启动成功
 WxTools.Client.ViewModel.MainViewModelname